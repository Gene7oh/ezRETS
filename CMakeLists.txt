project(ezrets)

# This is on until we learn more about cmake
SET(CMAKE_START_TEMP_FILE "" CACHE STRING "Foo")
SET(CMAKE_END_TEMP_FILE "" CACHE STRING "FOO")
SET(CMAKE_VERBOSE_MAKEFILE ON CACHE BOOL "Foo again")

SET(PROJECT_BINARY_DIR build)
ADD_DEFINITIONS(-DEZRETS_VERSION=\\\"2.0.7\\\")

FIND_PROGRAM(LIBRETS_CONFIG librets-config DOC "librets-config program")
IF (LIBRETS_CONFIG)
  EXEC_PROGRAM(${LIBRETS_CONFIG} ARGS "--cflags" OUTPUT_VARIABLE LIBRETS_CFLAGS)
  EXEC_PROGRAM(${LIBRETS_CONFIG} ARGS "--libs" OUTPUT_VARIABLE LIBRETS_LDFLAGS)
ELSE (LIBRETS_CONFIG)
  SET(LIBRETS_INCLUDE_DIRECTORY "" CACHE PATH "LIBRETS include directory")
ENDIF (LIBRETS_CONFIG)

#IF(NOT LIBRETS_INCLUDE_DIRECTORY)
#  MESSAGE(FATAL

#SET (LIBRETS_CONFIG ON CACHE FILEPATH "Where is your librets-config")

INCLUDE(CheckIncludeFile)
FIND_PACKAGE(wxWidgets)
FIND_PACKAGE(Boost)

INCLUDE(CheckTypeSize)
CHECK_TYPE_SIZE("long long" LONG_LONG)

IF (WIN32)
  INCLUDE(FindRuby)
ENDIF (WIN32)

FIND_PROGRAM(WITH_IODBC iodbc-config DOC "Do we have IODBC?")
if (WITH_IODBC)
  ADD_DEFINITIONS(-DHAVE_IODBC)
else (WITH_IODBC)
  CHECK_INCLUDE_FILE(sql.h SQL_H_FOUND)
  CHECK_INCLUDE_FILE(odbcinst.h ODBCINST_H_FOUND)
ENDIF (WITH_IODBC)


ADD_SUBDIRECTORY(project/common/src build/ezrets-common)
