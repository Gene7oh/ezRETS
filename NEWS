Changes since 2.0.8
-------------------

 Enhancements
  * Added default MaximumLengths for cases where the RETS server
    metadata didn't specify one.
  * When debug logging is turned off things should be slightly less

Changes since 2.0.7
-------------------
 * User-Agent is now "ezRETS/2.0.8 (librets/1.1.8)"

 Non-backwards compatible changes
  * Undoing a change in 2.0.5, missing translators are now fatal on a
    search.  Its better to half a query not work than to have a user
    wondering why only have the data is showing up.

 Enhancements
  * Added a translator mapping to go from RETS to ODBC's
    SQL_C_SBIGINT.  This is the same as the existing mapping of
    SQL_C_BIGINT.
  * Rewrote Character translator to see behave better when it is used
    with SQLGetData
  * Made "missing translator" messages more human readable, hopefully.

Changes since 2.0.6
-------------------
 * User-Agent is now "ezRETS/2.0.7 (librets/1.1.8)"

 Bug Fixes
  * Fix crash with SQLServer DTS when asking for BLOB as character
    stream and buffer length of 0.
  * Fix crash with SQLServer (and other things like ADO) when a
    Decimal is retrieved as a SQL_NUMERIC.  The value returned may
    still be incorrect, but a fatal crash is no longer happening,
    which almost every new user hit.  The work around for the bad
    value is still to turn on "Treat Decimal as VARCHAR"

 Developer Notes
   * libRETS 1.1.8 now required to build.  The configure script now checks
     to see if libRETS is at the required version and if it had the SQL
     translator compiled in.

Changes since 2.0.5
-------------------
 * User-Agent is now "ezRETS/2.0.6 (librets/1.1.5)"

 Bug Fixes
   * Test fix for SQLServer DTS and string length.

 Enhancements
   * Translator for unsigned short implemented, fixes SQLServer DTS
   * Returns NULL and logs to debug log for fields where ezRETS does
     not yet have a translator.
   * Implemented SQL_ATTR_ROWS_FETCHED_PTR and SQL_ATTR_ROW_STATUS_PTR
     and related IRD filling in.

 Developer Notes
   * libRETS 1.1.5 is not required, but strongly suggested as it has a
     SQL to DMQL translator fix that allows you to search for strings
     that have a space in them, such as "New Hamshire"

Changes since 2.0.4
-------------------
 * User-Agent is now "ezRETS/2.0.5 (librets/1.1.4)"

 Enhancement
   * Added a translator to go from RETS to ODBC's SQL_C_ULONG.

 Bug fixes
   * Fix bug introduced in 2.0.4 which made a missing translator a
     fatal error.  This was an undocumented change that caused grief
     for some users.

Changes since 2.0.3
-------------------
 * User-Agent is now "ezRETS/2.0.4 (librets/1.1.4)"

 Bug fixes 
   * Fixed error where any BLOB after the first wasn't being
     returned. Thanks to Mike Kujawski for finding this error via some
     VBScript code. This bug manifested itself form the following
     sequence of low level ODBC calls, where col is the same column:
     SQLGetData(col); SQLFetch(); SQLGetData(col).
   * Fixed error where BLOBs would be returned incorrectly when when
     ezRETS had the advanced feature of "Ignore Metadata Type" turned
     on.  Thanks again to Mike Kujawski.

Changes since 2.0.2
-------------------
 * User-Agent is now "ezRETS/2.0.3 (librets/1.1.4)"

 Enhancement
   * NOT BACKWARDS COMPATIBLE: In the past, ezRETS honored the RETS
     Table Metadata item of "Default" when the value was set to -1.
     This caused that particular field to be hidden in ezRETS view of
     the world.  After running into numerous cases where this has been
     a hindrance, it has been decided that the Default value will be
     completely ignored.  All data defined in the RETS Metadata will
     be made available to ezRETS.

 Bug fixes
   * Fixed edge case around SQLGetData and zero length buffers which
     caused vbscript issues when doing ODBC and getting BLOBS.  Thanks
     to Mike Kujawski and Nick Russo with their debugging assistance.
   * Put work around option to treat RETS DECIMALS as VARCHARs instead
     of trying to translate to a native type.  This should allow
     people using SQLServer DTS to work.  Eventually, this will be removed
     when issue causing the crash is fixed.
   * User-Agent Auth is disabled by default.  No default condition was
     set in the past, so it was randomly on or off which lead to
     confusion.

 Developer Notes
   * libRETS 1.1.4 is not required, but strongly suggested.

Changes since 2.0.1
-------------------
 * User-Agent is now "ezRETS/2.0.2 (librets/1.1.2)"

 Enhancements
  * Add support for Interealty's non-standard User-Agent
    Authentication which is in use in many markets.  Requested by
    Brandon Munday.
  * Translator for SQL_NUMERIC has been written.  SQLServer DTS asks
    for fields as NUMERIC in some circustances.  Reported by Wayne
    Bienek.
  * Translator for SQL_BIGINT has been implemented.  Hasn't been
    reported as an issue, but fixed for completeness sake.

 Developer Notes
  * Due to NUMERIC translator, boost 1.33.1 is now required
  * libRETS 1.1.2 is required to build.

Changes since 2.0.0
-------------------
 * User-Agent is now "ezRETS/2.0.1 (librets/1.1.1)"

 Bug fixes
  * Column widths where reported at COMPACT-DECODED size when COMPACT
    was used as the search format.  So switching to COMPACT when
    COMPACT-DECODED caused MS Query to have Out of Memory issue had
    no positive effect.  Thanks to Elliot Onn for helping discover this.

Changes since 1.2.2
-------------------
 * User-Agent is now "ezRETS/2.0.0 (librets/1.1.1)"

 Enhancements
  * RETS GetObject now supported.  ezRETS can be used to download images.
  * SQL Syntax document updated with GetObject info
  * count(*) supported for data queries

 Developer Notes:
  * libRETS 1.1.1 is required to build
  * iODBC now supported as well as unixODBC for unix systems

Changes since 1.2.1
-------------------
 * User-Agent is now "ezRETS/1.2.2 (librets/1.1.0b2.1)"

 Bug fixes
  * SQLColAttribute didn't correctly make LOOKUP and LOOKUP_MULTI look like
    a character field.

 Developer notes:
  * libRETS 1.1.0b2 or 1.1.0b2.1 is required to build.  b2.1 is only
    needed for going against Paragon systems.

Changes since 1.2.0
-------------------
 * User-Agent is now "ezRETS/1.2.1 (librets/1.1.0b2.1)"

 Bug fixes:
  * Two small fixes (one in libRETS) to make ezRETS happy with
    Paragon.
  * Null-terminate the error code string.  This makes ruby happy,
    probably others as well.

 Developer notes:
  * libRETS 1.1.0b2 or 1.1.0b2.1 is required to build.  b2.1 is only
    needed for going against Paragon systems.

Changes since 1.1.0
-------------------
 * User-Agent is now "ezRETS/1.2.0 (librets/1.0.0b1)"
 * SQL syntax document added to documentation

 Enhancements
  * You can choose between the return format of COMPACT or
    COMPACT-DECODED on the Advanced tab.  COMPACT-DECODED is the
    default.  Closes ticket #19
  * MarketLinx 1.0 servers should work as work around for broken
    double auth header has been added to libcurl 1.15.1

 Bug fixes:
  * SQLPrepare is now implemented properly which fixes bugs:
     o #12 - OdbcDataAdaptor / Data Adaptor Configuration wizard in
             VB.net now works.
     o #25 - SQLServer DTS now works.

 Developer notes:
  * ezRETS 1.1.0b2 is required to build

Changes since 1.0.0
-------------------
  * User-Agent is now "ezRETS/1.1.0 (librets/1.0.0)"

 Enhancements
  * IgnoreMetadataType mode added.  This mode allows one to tell ezRETS
    to ignore the native type that the RETS server reports and just return
    everything as a character field.
  * Connections without a definded data source are now supported.  See
    the DSNless_ConnectionString.txt file or the project wiki for more
    details.

 Bug fixes:
  * Various linux build fixes related to linking
  * NULL pointer exceptions that were a result of invalid table names
    now return an error.
  * SQLFetchSchool now pays attention to FetchOrientation and returns
    an error if its not SQL_FETCH_NEXT.
  * SQLFetchSchool does not throw a NULL pointer exception when pointers
    in the IRD aren't filled in

Changes since 0.9.6
-------------------
  * User-Agent is now "ezRETS/1.0.0 (librets/1.0.0)"

 Bug fixes:
  * Fixed bad behaviour where SQLTables was returning table names even when
    only VIEWs were asked for.

 Enhancements
  * Metadata is now gathered incrementally by default.  This should
    result in a performance increase at connection time and allow some
    RETS vendors (MRIS) to now function.  Should you require the old
    behavior, a "Use Bulk Metadata" option has been added to the
    Advanced tab of the configuration panel.

Changes since 0.9.5
-------------------
 Bug fixes:
  * Data translation/lexical_cast errors now more meaningful to the
    end user
  * Fix parsing error in Timestamps/DateTime where we were off by one with
    MarketLinx
  * Fix error where SQLGetData would ignore request data type and
    return data as preferred data type
  * SQLGetInfo returns correct information about SQLGetData extensions
  * Debug log files now append, not replace

 Enhancements
  * SQLPrimaryKeys returns primary key field as reported by RETS metadata
  * SQLSpecialColumns returns primary key field information as
    reported by RETS metadata
  * Stub implementation of SQLParamOptions
  * Statement Offset pointer now supported

Changes since 0.9.4
-------------------
 Bug fixes:
  * Fixed null-pointer dereference that resulted in a crash when given a
    non-existent Table name in SQLTable
  * Fixed null-pointer dereference that resulted in a crash when getting INT
    data through SQLGetInfo
  * Fixed null-pointer dereference that resulted in a crash on getting column
    attributes when pulling from an ezrets virtual table instead of "real"
    RETS data
  * Can now handle when a RETS Table/SQL Column has its Interpretation
    set to currency and is formatted with commas. (Fix for Metrolist.)
  * Unknown Metadata types now ignored. 

 Enhancements:
  * SQLExtendedScroll and SQLFetchScroll implemented. This allows
    PHP metadata functions (SQLTables/SQLColumns) to work.
  * SQLColumns now returns column names in alphabetical order.
  * Quoting (using ") in a SQL statement now supported
  * Table aliases now supported 

Changes since 0.9.3
-------------------
 * SQLRowCount has been implemented.
 * SQLGetTypeInfo returns data on the types ezRETS supports.
 * SQLColAttribute has been updated to return Column name.  Fixes problem
   where column name was garbled in PHP.
 * Unix configure script now uses librets-config to get linking and include
   information.

Changes since 0.9.2
-------------------
 * Updated to latest librets that fixes a few XML parsing errors on certain
   servers.  (empty <COMMENT> tags)
 * RETS Lookup fields are now properly queried when specified.
 * Fix in Metadata interpretation that would cause non-StandardNames
   connections to fail.
 * Fix for NULL values in Precision in Metadata which caused SQLDescribeCol
   to fail.

Changes since 0.9.1
-------------------
 * Preliminary RETS 1.0 support
 * Bug fix for LOOKUP fields
 * Improved error reporting on data translation errors
 * User-Agent, HTTP Method, RETS Version, and Logging now configurable
   from panel

Changes since 0.9
-----------------
 * Default User-Agent is now "ezRETS/<version> (librets/<version>)"  For
   this release that means "ezRETS/0.9.1 (librets/0.1)"
 * User-Agent is now configurable by editing the registry/odbc.ini per DSN.
 * UseHttpGet has been added for RETS Servers where doing HTTP POST method
   doesn't work.  (POST is now the default in librets and ezRETS)
 * HTTP Logging now supported
 * Statements without WHERE clause now have simulated empty result set.
 * Fixed error where you could not repair the query if the Excel New
   Database Query wizard failed
 * ORDER BY is silently ignored
