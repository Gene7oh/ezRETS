Changes since 2.0.1
-------------------
 * User-Agent is now "ezRETS/2.0.2 (librets/1.1.2)"

 Enhancements
  * Add support for Interealty's non-standard User-Agent
    Authentication which is in use in many markets.  Requested by
    Brandon Munday.
  * Translator for SQL_NUMERIC has been written.  SQLServer DTS asks
    for fields as NUMERIC in some circustances.  Reported by Wayne
    Bienek.
  * Translator for SQL_BIGINT has been implemented.  Hasn't been
    reported as an issue, but fixed for completeness sake.

 Developer Notes
  * Due to NUMERIC translator, boost 1.33.1 is now required
  * libRETS 1.1.2 is required to build.

Changes since 2.0.0
-------------------
 * User-Agent is now "ezRETS/2.0.1 (librets/1.1.1)"

 Bug fixes
  * Column widths where reported at COMPACT-DECODED size when COMPACT
    was used as the search format.  So switching to COMPACT when
    COMPACT-DECODED caused MS Query to have Out of Memory issue had
    no positive effect.  Thanks to Elliot Onn for helping discover this.

Changes since 1.2.2
-------------------
 * User-Agent is now "ezRETS/2.0.0 (librets/1.1.1)"

 Enhancements
  * RETS GetObject now supported.  ezRETS can be used to download images.
  * SQL Syntax document updated with GetObject info
  * count(*) supported for data queries

 Developer Notes:
  * libRETS 1.1.1 is required to build
  * iODBC now supported as well as unixODBC for unix systems

Changes since 1.2.1
-------------------
 * User-Agent is now "ezRETS/1.2.2 (librets/1.1.0b2.1)"

 Bug fixes
  * SQLColAttribute didn't correctly make LOOKUP and LOOKUP_MULTI look like
    a character field.

 Developer notes:
  * libRETS 1.1.0b2 or 1.1.0b2.1 is required to build.  b2.1 is only
    needed for going against Paragon systems.

Changes since 1.2.0
-------------------
 * User-Agent is now "ezRETS/1.2.1 (librets/1.1.0b2.1)"

 Bug fixes:
  * Two small fixes (one in libRETS) to make ezRETS happy with
    Paragon.
  * Null-terminate the error code string.  This makes ruby happy,
    probably others as well.

 Developer notes:
  * libRETS 1.1.0b2 or 1.1.0b2.1 is required to build.  b2.1 is only
    needed for going against Paragon systems.

Changes since 1.1.0
-------------------
 * User-Agent is now "ezRETS/1.2.0 (librets/1.0.0b1)"
 * SQL syntax document added to documentation

 Enhancements
  * You can choose between the return format of COMPACT or
    COMPACT-DECODED on the Advanced tab.  COMPACT-DECODED is the
    default.  Closes ticket #19
  * MarketLinx 1.0 servers should work as work around for broken
    double auth header has been added to libcurl 1.15.1

 Bug fixes:
  * SQLPrepare is now implemented properly which fixes bugs:
     o #12 - OdbcDataAdaptor / Data Adaptor Configuration wizard in
             VB.net now works.
     o #25 - SQLServer DTS now works.

 Developer notes:
  * ezRETS 1.1.0b2 is required to build

Changes since 1.0.0
-------------------
  * User-Agent is now "ezRETS/1.1.0 (librets/1.0.0)"

 Enhancements
  * IgnoreMetadataType mode added.  This mode allows one to tell ezRETS
    to ignore the native type that the RETS server reports and just return
    everything as a character field.
  * Connections without a definded data source are now supported.  See
    the DSNless_ConnectionString.txt file or the project wiki for more
    details.

 Bug fixes:
  * Various linux build fixes related to linking
  * NULL pointer exceptions that were a result of invalid table names
    now return an error.
  * SQLFetchSchool now pays attention to FetchOrientation and returns
    an error if its not SQL_FETCH_NEXT.
  * SQLFetchSchool does not throw a NULL pointer exception when pointers
    in the IRD aren't filled in

Changes since 0.9.6
-------------------
  * User-Agent is now "ezRETS/1.0.0 (librets/1.0.0)"

 Bug fixes:
  * Fixed bad behaviour where SQLTables was returning table names even when
    only VIEWs were asked for.

 Enhancements
  * Metadata is now gathered incrementally by default.  This should
    result in a performance increase at connection time and allow some
    RETS vendors (MRIS) to now function.  Should you require the old
    behavior, a "Use Bulk Metadata" option has been added to the
    Advanced tab of the configuration panel.

Changes since 0.9.5
-------------------
 Bug fixes:
  * Data translation/lexical_cast errors now more meaningful to the
    end user
  * Fix parsing error in Timestamps/DateTime where we were off by one with
    MarketLinx
  * Fix error where SQLGetData would ignore request data type and
    return data as preferred data type
  * SQLGetInfo returns correct information about SQLGetData extensions
  * Debug log files now append, not replace

 Enhancements
  * SQLPrimaryKeys returns primary key field as reported by RETS metadata
  * SQLSpecialColumns returns primary key field information as
    reported by RETS metadata
  * Stub implementation of SQLParamOptions
  * Statement Offset pointer now supported

Changes since 0.9.4
-------------------
 Bug fixes:
  * Fixed null-pointer dereference that resulted in a crash when given a
    non-existent Table name in SQLTable
  * Fixed null-pointer dereference that resulted in a crash when getting INT
    data through SQLGetInfo
  * Fixed null-pointer dereference that resulted in a crash on getting column
    attributes when pulling from an ezrets virtual table instead of "real"
    RETS data
  * Can now handle when a RETS Table/SQL Column has its Interpretation
    set to currency and is formatted with commas. (Fix for Metrolist.)
  * Unknown Metadata types now ignored. 

 Enhancements:
  * SQLExtendedScroll and SQLFetchScroll implemented. This allows
    PHP metadata functions (SQLTables/SQLColumns) to work.
  * SQLColumns now returns column names in alphabetical order.
  * Quoting (using ") in a SQL statement now supported
  * Table aliases now supported 

Changes since 0.9.3
-------------------
 * SQLRowCount has been implemented.
 * SQLGetTypeInfo returns data on the types ezRETS supports.
 * SQLColAttribute has been updated to return Column name.  Fixes problem
   where column name was garbled in PHP.
 * Unix configure script now uses librets-config to get linking and include
   information.

Changes since 0.9.2
-------------------
 * Updated to latest librets that fixes a few XML parsing errors on certain
   servers.  (empty <COMMENT> tags)
 * RETS Lookup fields are now properly queried when specified.
 * Fix in Metadata interpretation that would cause non-StandardNames
   connections to fail.
 * Fix for NULL values in Precision in Metadata which caused SQLDescribeCol
   to fail.

Changes since 0.9.1
-------------------
 * Preliminary RETS 1.0 support
 * Bug fix for LOOKUP fields
 * Improved error reporting on data translation errors
 * User-Agent, HTTP Method, RETS Version, and Logging now configurable
   from panel

Changes since 0.9
-----------------
 * Default User-Agent is now "ezRETS/<version> (librets/<version>)"  For
   this release that means "ezRETS/0.9.1 (librets/0.1)"
 * User-Agent is now configurable by editing the registry/odbc.ini per DSN.
 * UseHttpGet has been added for RETS Servers where doing HTTP POST method
   doesn't work.  (POST is now the default in librets and ezRETS)
 * HTTP Logging now supported
 * Statements without WHERE clause now have simulated empty result set.
 * Fixed error where you could not repair the query if the Excel New
   Database Query wizard failed
 * ORDER BY is silently ignored
